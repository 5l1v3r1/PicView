<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">


    <!-- SimpleStyles: Menu -->
    <!--<SnippetMenu>-->
    <Style x:Key="{x:Type Menu}"
         TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels"   Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="0">
                        <Border.CornerRadius>
                            <CornerRadius BottomLeft="12.4" BottomRight="12.4"
                            TopLeft="12.4" TopRight="12.4"/>
                        </Border.CornerRadius>
                        <StackPanel ClipToBounds="True"
                        Orientation="Horizontal"
                        IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--</SnippetMenu>-->

    <!--<SnippetContextMenu>-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
        <Setter Property="HasDropShadow"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="#F2141414"
                            BorderThickness="0"
                            >
                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                   Value="true">
                            <Setter TargetName="Border"
                    Property="Padding"
                    Value="5" />
                            <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--</SnippetContextMenu>-->

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Style x:Key="MenuScrollButton"
         TargetType="{x:Type RepeatButton}"
         BasedOn="{x:Null}">
        <Setter Property="ClickMode"
            Value="Hover" />
        <Setter Property="MinWidth"
            Value="0" />
        <Setter Property="MinHeight"
            Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent"
                     SnapsToDevicePixels="true">
                        <Rectangle DockPanel.Dock="Right"
                       x:Name="R1"
                       Width="1"
                       Fill="Transparent" />
                        <Rectangle DockPanel.Dock="Bottom"
                       x:Name="B1"
                       Height="1"
                       Fill="Transparent" />
                        <Rectangle DockPanel.Dock="Left"
                       x:Name="L1"
                       Width="1"
                       Fill="Transparent" />
                        <Rectangle DockPanel.Dock="Top"
                       x:Name="T1"
                       Height="1"
                       Fill="Transparent" />
                        <ContentPresenter x:Name="ContentContainer"
                              Margin="2,2,2,2"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                     Value="true">
                            <Setter TargetName="R1"
                      Property="Fill"
                      Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="B1"
                      Property="Fill"
                      Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="L1"
                      Property="Fill"
                      Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="T1"
                      Property="Fill"
                      Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="ContentContainer"
                      Property="Margin"
                      Value="3,3,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollViewer for a MenuItem-->
    <Style x:Key="MenuScrollViewer"
         TargetType="{x:Type ScrollViewer}"
         BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"
            Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <!--<SnippetMenuScrollViewer>-->
                <!--ScrollViewer for a MenuItem-->
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                    Grid.Column="0">
                            <ScrollContentPresenter Margin="0" />
                        </Border>
                        <RepeatButton Style="{StaticResource MenuScrollButton}"
                          Grid.Row="0"
                          Grid.Column="0"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                    Data="{StaticResource UpArrow}" />
                        </RepeatButton>
                        <RepeatButton Style="{StaticResource MenuScrollButton}"
                          Grid.Row="2"
                          Grid.Column="0"
                          Command="{x:Static ScrollBar.LineDownCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                    Data="{StaticResource DownArrow}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
                <!--</SnippetMenuScrollViewer>-->
            </Setter.Value>
        </Setter>
    </Style>

    <!--<SnippetMenuItem>-->
    <!--<Seperator>-->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
         TargetType="{x:Type Separator}">
        <Setter Property="Height"
            Value="1" />
        <Setter Property="Margin"
            Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="2"
                  BorderBrush="#FF383838">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--</Snippet9>-->

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                   TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="{TemplateBinding Padding}"
                          ContentSource="Header"
                          RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
               Placement="Top"
               IsOpen="{TemplateBinding IsSubmenuOpen}"
               AllowsTransparency="True"
               Focusable="False"
               PopupAnimation="Fade" OpacityMask="#7F000000">
                    <Border x:Name="SubmenuBorder"
                  SnapsToDevicePixels="True"
                  BorderThickness="1"
                  Background="#FF242424">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#7F000000" />
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True"
                          Style="{StaticResource MenuScrollViewer}" Foreground="White">
                            <StackPanel IsItemsHost="True"
                          KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
               Value="true">
                <Setter TargetName="Popup"
                Property="PopupAnimation"
                Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted"
               Value="true">
                <Setter TargetName="Border"
                Property="BorderBrush"
                Value="Transparent" />
                <Setter Property="Background"
                TargetName="Border" Value="transparent"/>
            </Trigger>
            <!--<SnippetTriggerSourceName>-->
            <Trigger SourceName="Popup"
               Property="AllowsTransparency"
               Value="True">
                <Setter TargetName="SubmenuBorder"
                Property="CornerRadius"
                Value="0,0,0,0" />
                <Setter TargetName="SubmenuBorder"
                Property="Padding"
                Value="0,0,0,3" />
            </Trigger>
            <!--</SnippetTriggerSourceName>-->
            <Trigger Property="IsEnabled"
               Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFDADADA" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                   TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="{TemplateBinding Padding}"
                          ContentSource="Header"
                          RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
                    Value="true">
            <Setter Property="Background"
                    TargetName="Border"
                    Value="transparent">
            </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
               Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFDADADA" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                   TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
                BorderThickness="4">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                            SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                            SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                          Margin="5,0,5,0"
                          VerticalAlignment="Center"
                          ContentSource="Icon" />
          <Border x:Name="Check"
                Width="13"
                Height="13"
                Visibility="Collapsed"
                Margin="{TemplateBinding Padding}"
                BorderThickness="0">
          <Path x:Name="CheckMark"
                Width="15"
                Height="15"
                Visibility="Hidden"
                SnapsToDevicePixels="False"
                StrokeThickness="1"
                Data="F1M5.346,7.187C5.346,7.187 8.991,2.802 8.991,2.802 8.991,2.802 7.487,1.001 7.487,1.001 7.487,1.001 3.843,5.384 3.843,5.384 3.843,5.384 2.505,3.779 2.505,3.779 2.505,3.779 1.003,5.582 1.003,5.582 1.003,5.582 3.845,8.992 3.845,8.992 3.845,8.992 3.847,8.99 3.847,8.99 3.847,8.99 5.347,7.189 5.347,7.189 5.347,7.189 5.346,7.187 5.346,7.187z"
                Fill="#FF088530">
                        <Path.Stroke>
                            <SolidColorBrush Color="#FF088530" />
                        </Path.Stroke>
                    </Path>
                </Border>
                <ContentPresenter x:Name="HeaderHost"
                          Grid.Column="1"
                          ContentSource="Header"
                          RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                   Grid.Column="2"
                   Text="{TemplateBinding InputGestureText}"
                   Margin="5,2,0,2"
                   DockPanel.Dock="Right"
                   Foreground="WhiteSmoke"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command"
               Value="{x:Null}" />
            <Trigger Property="Icon"
               Value="{x:Null}">
                <Setter TargetName="Icon"
                Property="Visibility"
                Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
               Value="true">
                <Setter TargetName="CheckMark"
                Property="Visibility"
                Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable"
               Value="true">
                <Setter TargetName="Check"
                Property="Visibility"
                Value="Visible" />
                <Setter TargetName="Icon"
                Property="Visibility"
                Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted"
               Value="true">
                <Setter Property="Background"
                        TargetName="Border" Value="#F2007ACC"/>
                <Setter Property="BorderBrush"
                        TargetName="Border"
                        Value="#F5007ACC"/>               
            </Trigger>
            <Trigger Property="IsEnabled"
               Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FF9C9C9C" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                   TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
            BorderThickness="1" 
            Padding="5,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                            SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                            SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                          Margin="6,0,6,0"
                          VerticalAlignment="Center"
                          ContentSource="Icon" />
                <ContentPresenter x:Name="HeaderHost"
                          Grid.Column="1"
                          ContentSource="Header"
                          RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                   Grid.Column="2"
                   Text="{TemplateBinding InputGestureText}"
                   Margin="5,2,2,2"
                   DockPanel.Dock="Right" Foreground="#FFF7F4F4" />
                <Path Grid.Column="3"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Data="F1M2,11.906C2,11.906 2,1.906 2,1.906 2,1.906 12,6.875 12,6.875">
                    <Path.Fill>
                        <SolidColorBrush Color="#FFD8D8D8" />
                    </Path.Fill>
                </Path>
                <Popup x:Name="Popup"
                       Placement="Right"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade" OpacityMask="#7F000000">
                        <Border x:Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                BorderThickness="1"
                                Background="#FF242424">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#7F000000" />
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True"
                          Style="{StaticResource MenuScrollViewer}" Foreground="White">
                            <StackPanel IsItemsHost="True"
                          KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
               Value="{x:Null}">
                <Setter TargetName="Icon"
                Property="Visibility"
                Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
               Value="true">
                <Setter Property="Background"
                        TargetName="Border" Value="#E5424242"/>
                <Setter Property="BorderBrush"
                        TargetName="Border"
                        Value="#FF424242"/>
            </Trigger>
            <Trigger SourceName="Popup"
               Property="AllowsTransparency"
               Value="True">
                <Setter TargetName="SubmenuBorder"
                Property="CornerRadius"
                Value="0,0,0,0" />
                <Setter TargetName="SubmenuBorder"
                Property="Padding"
                Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled"
               Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFDADADA" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}"
         TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle"
            Value="True" />
        <Setter Property="FontFamily" Value="/PicView;component/lib/fonts/#TeX Gyre Heros Cn" />
        <Style.Triggers>
            <Trigger Property="Role"
               Value="TopLevelHeader">
                <Setter Property="Template"
                Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />
            </Trigger>
            <Trigger Property="Role"
               Value="TopLevelItem">
                <Setter Property="Template"
                Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
               Value="SubmenuHeader">
                <Setter Property="Template"
                Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
               Value="SubmenuItem">
                <Setter Property="Template"
                Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--</SnippetMenuItem>-->
</ResourceDictionary>